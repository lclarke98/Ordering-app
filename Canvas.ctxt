#BlueJ class context
comment0.params=title
comment0.target=Canvas(java.lang.String)
comment0.text=\r\n\ Create\ a\ Canvas\ with\ default\ height,\ width\ and\ background\ color\ \r\n\ (300,\ 300,\ white).\r\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\ \ \ \ \ \r\n
comment1.params=title\ width\ height
comment1.target=Canvas(java.lang.String,\ int,\ int)
comment1.text=\r\n\ Create\ a\ Canvas\ with\ default\ background\ color\ (white).\r\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\r\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\r\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\r\n
comment10.params=xP1\ yP1\ xP2\ yP2\ xP3\ yP3
comment10.target=void\ fillTriangle(double,\ double,\ double,\ double,\ double,\ double)
comment10.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ triangle\ with\ the\ current\ color\r\n\ of\ the\ canvas.\ \ The\ order\ of\ the\ points\ provided\ is\ not\ relevant.\r\n\ \r\n\ @param\ xP1\ The\ x\ coordinate\ of\ the\ first\ point\ of\ the\ triangle\r\n\ @param\ yP1\ The\ y\ coordinate\ of\ the\ first\ point\ of\ the\ triangle\r\n\ @param\ xP2\ The\ x\ coordinate\ of\ the\ second\ point\ of\ the\ triangle\r\n\ @param\ yP2\ The\ y\ coordinate\ of\ the\ second\ point\ of\ the\ triangle\r\n\ @param\ xP3\ The\ x\ coordinate\ of\ the\ third\ point\ of\ the\ triangle\r\n\ @param\ yP3\ The\ y\ coordinate\ of\ the\ third\ point\ of\ the\ triangle\r\n
comment11.params=xPoints\ yPoints
comment11.target=void\ fillPolygon(double[],\ double[])
comment11.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ polygon\ with\ the\ current\ color\r\n\ of\ the\ canvas.\ \ The\ points\ should\ be\ given\ in\ a\ cycle.\r\n\ @param\ xPoints\ The\ x\ coordinates\ for\ all\ the\ points\ in\ the\ polygon\r\n\ @param\ yPoints\ The\ y\ coordinates\ for\ all\ the\ points\ in\ the\ polygon\r\n
comment12.params=
comment12.target=void\ erase()
comment12.text=\r\n\ Erase\ the\ whole\ canvas.\r\n
comment13.params=xPos\ yPos\ diameter
comment13.target=void\ eraseCircle(double,\ double,\ double)
comment13.text=\r\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ circle.\ This\ is\ a\ \r\n\ convenience\ method.\ A\ similar\ effect\ can\ be\ achieved\ with\r\n\ the\ "erase"\ method.\r\n\ @param\ \ xPos\ \ The\ x-coordinate\ of\ the\ circle\ center\ point\r\n\ @param\ \ yPos\ \ The\ y-coordinate\ of\ the\ circle\ center\ point\r\n\ @param\ \ diameter\ \ The\ diameter\ of\ the\ circle\ to\ be\ drawn\r\n
comment14.params=xPos\ yPos\ width\ height\ verticalMidLine\ leftFacing
comment14.target=void\ eraseSemiCircle(double,\ double,\ double,\ double,\ boolean,\ boolean)
comment14.text=\r\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ semicircle\ with\ the\ current\r\n\ foreground\ color\ of\ the\ canvas.\r\n\ @param\ xPos\ The\ x\ coordinate\ of\ the\ upper-left\ corner\ of\ the\ framing\ rectangle\ of\ the\ semicircle\r\n\ @param\ yPos\ The\ y\ coordinate\ of\ the\ upper-left\ corner\ of\ the\ framing\ rectangle\ of\ the\ semicircle\r\n\ @param\ width\ The\ overall\ width\ of\ the\ full\ circle\ of\ which\ this\ semicircle\ is\ a\ partial\ section\r\n\ @param\ height\ The\ overall\ height\ of\ the\ full\ circle\ of\ which\ this\ semicircle\ is\ a\ partial\ section\r\n\ @param\ verticalMidLine\ if\ true,\ the\ line\ bounding\ the\ semicircle\ will\ be\ vertical\r\n\ @param\ leftFacing\ if\ true\ and\ vertical,\ arc\ will\ point\ left.\ \ if\ true\ and\ horizontal,\ arc\ will\ point\ upwards\r\n
comment15.params=xPos\ yPos\ width\ height
comment15.target=void\ eraseRectangle(double,\ double,\ double,\ double)
comment15.text=\r\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ rectangle.\ This\ is\ a\ \r\n\ convenience\ method.\ A\ similar\ effect\ can\ be\ achieved\ with\r\n\ the\ "erase"\ method.\r\n\ @param\ xPos\ The\ x\ coordinate\ of\ the\ upper\ left\ corner\ of\ the\ rectangle\r\n\ @param\ yPos\ The\ y\ coordinate\ of\ the\ upper\ left\ corner\ of\ the\ rectangle\r\n\ @param\ width\ The\ width\ of\ the\ rectangle\r\n\ @param\ height\ The\ height\ of\ the\ rectangle\r\n
comment16.params=xP1\ yP1\ xP2\ yP2\ xP3\ yP3
comment16.target=void\ eraseTriangle(double,\ double,\ double,\ double,\ double,\ double)
comment16.text=\r\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ triangle.\ \ \r\n\ The\ order\ of\ the\ points\ provided\ is\ not\ relevant.\r\n\ \r\n\ @param\ xP1\ The\ x\ coordinate\ of\ the\ first\ point\ of\ the\ triangle\r\n\ @param\ yP1\ The\ y\ coordinate\ of\ the\ first\ point\ of\ the\ triangle\r\n\ @param\ xP2\ The\ x\ coordinate\ of\ the\ second\ point\ of\ the\ triangle\r\n\ @param\ yP2\ The\ y\ coordinate\ of\ the\ second\ point\ of\ the\ triangle\r\n\ @param\ xP3\ The\ x\ coordinate\ of\ the\ third\ point\ of\ the\ triangle\r\n\ @param\ yP3\ The\ y\ coordinate\ of\ the\ third\ point\ of\ the\ triangle\r\n
comment17.params=xPoints\ yPoints
comment17.target=void\ erasePolygon(double[],\ double[])
comment17.text=\r\n\ Erase\ the\ internal\ dimensions\ of\ the\ given\ polygon\ \r\n\ The\ points\ should\ be\ given\ in\ a\ cycle.\r\n\ @param\ xPoints\ The\ x\ coordinates\ for\ all\ the\ points\ in\ the\ polygon\r\n\ @param\ yPoints\ The\ y\ coordinates\ for\ all\ the\ points\ in\ the\ polygon\r\n
comment18.params=shape
comment18.target=void\ erase(java.awt.Shape)
comment18.text=\r\n\ Erase\ a\ given\ shape's\ interior\ on\ the\ screen.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment19.params=shape
comment19.target=void\ eraseOutline(java.awt.Shape)
comment19.text=\r\n\ Erases\ a\ given\ shape's\ outline\ on\ the\ screen.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment2.params=title\ width\ height\ bgColor
comment2.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment2.text=\r\n\ Create\ a\ Canvas.\r\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\r\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\r\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\r\n\ @param\ bgColor\ \ the\ desired\ background\ color\ of\ the\ canvas\r\n
comment20.params=text\ x\ y
comment20.target=void\ drawString(java.lang.String,\ double,\ double)
comment20.text=\r\n\ Draws\ a\ String\ on\ the\ Canvas.\r\n\ @param\ \ text\ \ \ the\ String\ to\ be\ displayed\ \r\n\ @param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \r\n\ @param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\r\n
comment21.params=text\ x\ y
comment21.target=void\ eraseString(java.lang.String,\ double,\ double)
comment21.text=\r\n\ Erases\ a\ String\ on\ the\ Canvas.\r\n\ @param\ \ text\ \ \ \ \ the\ String\ to\ be\ displayed\ \r\n\ @param\ \ x\ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \r\n\ @param\ \ y\ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\r\n
comment22.params=x1\ y1\ x2\ y2
comment22.target=void\ drawLine(double,\ double,\ double,\ double)
comment22.text=\r\n\ Draws\ a\ line\ on\ the\ Canvas.\r\n\ @param\ \ x1\ \ \ x\ co-ordinate\ of\ start\ of\ line\ \r\n\ @param\ \ y1\ \ \ y\ co-ordinate\ of\ start\ of\ line\ \r\n\ @param\ \ x2\ \ \ x\ co-ordinate\ of\ end\ of\ line\ \r\n\ @param\ \ y2\ \ \ y\ co-ordinate\ of\ end\ of\ line\ \r\n
comment23.params=newColor
comment23.target=void\ setForegroundColor(java.awt.Color)
comment23.text=\r\n\ Sets\ the\ foreground\ color\ of\ the\ Canvas.\r\n\ @param\ \ newColor\ \ \ the\ new\ color\ for\ the\ foreground\ of\ the\ Canvas\ \r\n
comment24.params=
comment24.target=java.awt.Color\ getForegroundColor()
comment24.text=\r\n\ Returns\ the\ current\ color\ of\ the\ foreground.\r\n\ @return\ \ \ the\ color\ of\ the\ foreground\ of\ the\ Canvas\ \r\n
comment25.params=newColor
comment25.target=void\ setBackgroundColor(java.awt.Color)
comment25.text=\r\n\ Sets\ the\ background\ color\ of\ the\ Canvas.\r\n\ @param\ \ newColor\ \ \ the\ new\ color\ for\ the\ background\ of\ the\ Canvas\ \r\n
comment26.params=
comment26.target=java.awt.Color\ getBackgroundColor()
comment26.text=\r\n\ Returns\ the\ current\ color\ of\ the\ background\r\n\ @return\ \ \ the\ color\ of\ the\ background\ of\ the\ Canvas\ \r\n
comment27.params=newFont
comment27.target=void\ setFont(java.awt.Font)
comment27.text=\r\n\ changes\ the\ current\ Font\ used\ on\ the\ Canvas\r\n\ @param\ \ newFont\ \ \ new\ font\ to\ be\ used\ for\ String\ output\r\n
comment28.params=newFontSize
comment28.target=void\ setFontSize(float)
comment28.text=\r\n\ changes\ the\ size\ of\ the\ font\ used\ on\ the\ Canvas\r\n\ @param\ newFontSize\ the\ size\ of\ the\ new\ font\r\n
comment29.params=
comment29.target=java.awt.Font\ getFont()
comment29.text=\r\n\ Returns\ the\ current\ font\ of\ the\ canvas.\r\n\ @return\ \ \ \ \ the\ font\ currently\ in\ use\r\n
comment3.params=visible
comment3.target=void\ setVisible(boolean)
comment3.text=\r\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\r\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\r\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\r\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\r\n\ the\ canvas\ (true\ or\ false)\ \r\n
comment30.params=width\ height
comment30.target=void\ setSize(int,\ int)
comment30.text=\r\n\ Sets\ the\ size\ of\ the\ canvas.\r\n\ @param\ \ width\ \ \ \ new\ width\ \r\n\ @param\ \ height\ \ \ new\ height\ \r\n
comment31.params=
comment31.target=java.awt.Dimension\ getSize()
comment31.text=\r\n\ Returns\ the\ size\ of\ the\ canvas.\r\n\ @return\ \ \ \ \ The\ current\ dimension\ of\ the\ canvas\r\n
comment32.params=milliseconds
comment32.target=void\ wait(int)
comment32.text=\r\n\ Waits\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\r\n\ This\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\r\n\ used\ when\ producing\ animations.\r\n\ @param\ \ milliseconds\ \ the\ number\ \r\n
comment4.params=
comment4.target=boolean\ isVisible()
comment4.text=\r\n\ Provide\ information\ on\ visibility\ of\ the\ Canvas.\r\n\ @return\ \ true\ if\ canvas\ is\ visible,\ false\ otherwise\r\n
comment5.params=shape
comment5.target=void\ draw(java.awt.Shape)
comment5.text=\r\n\ Draw\ the\ outline\ of\ a\ given\ shape\ onto\ the\ canvas.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\r\n
comment6.params=shape
comment6.target=void\ fill(java.awt.Shape)
comment6.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\ \r\n\ foreground\ color\ of\ the\ canvas.\r\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ filled\ \r\n
comment7.params=xPos\ yPos\ diameter
comment7.target=void\ fillCircle(double,\ double,\ double)
comment7.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ circle\ with\ the\ current\ \r\n\ foreground\ color\ of\ the\ canvas.\r\n\ @param\ \ xPos\ \ The\ x-coordinate\ of\ the\ circle\ center\ point\r\n\ @param\ \ yPos\ \ The\ y-coordinate\ of\ the\ circle\ center\ point\r\n\ @param\ \ diameter\ \ The\ diameter\ of\ the\ circle\ to\ be\ drawn\r\n
comment8.params=xPos\ yPos\ width\ height\ verticalMidLine\ leftFacing
comment8.target=void\ fillSemiCircle(double,\ double,\ double,\ double,\ boolean,\ boolean)
comment8.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ semicircle\ with\ the\ current\r\n\ foreground\ color\ of\ the\ canvas.\r\n\ @param\ xPos\ The\ x\ coordinate\ of\ the\ upper-left\ corner\ of\ the\ framing\ rectangle\ of\ the\ semicircle\r\n\ @param\ yPos\ The\ y\ coordinate\ of\ the\ upper-left\ corner\ of\ the\ framing\ rectangle\ of\ the\ semicircle\r\n\ @param\ width\ The\ overall\ width\ of\ the\ full\ circle\ of\ which\ this\ semicircle\ is\ a\ partial\ section\r\n\ @param\ height\ The\ overall\ height\ of\ the\ full\ circle\ of\ which\ this\ semicircle\ is\ a\ partial\ section\r\n\ @param\ verticalMidLine\ if\ true,\ the\ line\ bounding\ the\ semicircle\ will\ be\ vertical\r\n\ @param\ leftFacing\ if\ true\ and\ vertical,\ arc\ will\ point\ left.\ \ if\ true\ and\ horizontal,\ arc\ will\ point\ upwards\r\n
comment9.params=xPos\ yPos\ width\ height
comment9.target=void\ fillRectangle(double,\ double,\ double,\ double)
comment9.text=\r\n\ Fill\ the\ internal\ dimensions\ of\ the\ given\ rectangle\ with\ the\ current\ \r\n\ foreground\ color\ of\ the\ canvas.\ This\ is\ a\ convenience\ method.\ A\ similar\ \r\n\ effect\ can\ be\ achieved\ with\ the\ "fill"\ method.\r\n\ \r\n\ @param\ xPos\ The\ x\ coordinate\ of\ the\ upper\ left\ corner\ of\ the\ rectangle\r\n\ @param\ yPos\ The\ y\ coordinate\ of\ the\ upper\ left\ corner\ of\ the\ rectangle\r\n\ @param\ width\ The\ width\ of\ the\ rectangle\r\n\ @param\ height\ The\ height\ of\ the\ rectangle\r\n
numComments=33
